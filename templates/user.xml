<templateSet group="user">
  <template name="hcl" value="// -----------------------------------------------------------------------------------------------------------------" description="Horozontal" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="slf4j" value="private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(java.lang.invoke.MethodHandles.lookup().lookupClass());&#10;" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="jul" value="private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(java.lang.invoke.MethodHandles.lookup().lookupClass().getName());" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="author" value="@author Jin Kwon &amp;lt;onacit_at_gmail.com&amp;gt;" description="@author tag in javadoc" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_COMMENT" value="true" />
    </context>
  </template>
  <template name="uoe" value="throw new UnsupportedOperationException(&quot;unsupported operation; $END$&quot;);" description="" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="rnn" value="java.util.Objects.requireNonNull($VARIABLE$, &quot;$VARIABLE$ is null&quot;)" description="Objects.requireNonNull" toReformat="true" toShortenFQNames="true">
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="niy" value="throw new UnsupportedOperationException(&quot;not implemented yet&quot;);" description="" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="authorg" value="@author Jin Kwon &amp;lt;onacit_at_gmail.com&amp;gt;" description="" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_COMMENT" value="true" />
    </context>
  </template>
  <template name="authorwmp" value="@author Jin Kwon &amp;lt;onacit_at_wemakeprice.com&amp;gt;" description="@author tag in javadoc" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_COMMENT" value="true" />
    </context>
  </template>
  <template name="ifnpe" value="if ($VARIABLE$ == null) {&#10;    throw new NullPointerException(&quot;$VARIABLE$ is null&quot;);&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="on" value="java.util.Optional.ofNullable($VARIABLE$)" description="Optional.ofNullable" toReformat="true" toShortenFQNames="true">
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="aht" value="org.springframework.util.Assert.hasText($VARIABLE$, &quot;$VARIABLE$ is blank&quot;);" description="Assert.hasText" toReformat="true" toShortenFQNames="true">
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="oon" value="java.util.Optional.ofNullable($VARIABLE$)" description="Optional.ofNullable" toReformat="true" toShortenFQNames="true">
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="oo" value="java.util.Optional.of($VARIABLE$)" description="Optional.ofNullable" toReformat="true" toShortenFQNames="true">
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="mktv" value="org.mockito.Mockito.verify($VARIABLE$)" description="Optional.ofNullable" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="mktt" value="org.mockito.Mockito.times($VARIABLE$)" description="Optional.ofNullable" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="ajat" value="org.assertj.core.api.Assertions.assertThat($VARIABLE$)" description="Assert.hasText" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tlrc" value="java.util.concurrent.ThreadLocalRandom.current()" description="Assert.hasText" toReformat="true" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_EXPRESSION" value="true" />
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="aeina" value="throw new AssertionError(&quot;instantiation is not allowed&quot;);" description="instantiation is not allowed" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="jdtn" value="/**&#10; * The name of the table to which this class maps. The value is {@value}.&#10; */" description="javadoc table name" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="psf" value="public static final " description="public static final" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
</templateSet>